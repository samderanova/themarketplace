{"version":3,"sources":["Category/Category.js","Sidebar/Sidebar.js","Navbar/Navbar.js","Home/Home.js","InputField/InputField.js","Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["Category","className","this","props","category","id","onClick","e","show","target","title","subcategories","React","Component","Sidebar","state","showElectronics","showFoods","showHI","showSubcategory","bind","setState","prevState","property","String","changeShow","Navbar","showSidebar","to","renderSlide","slideNo","elements","slides","Home","slide","changeSlide","prevStateID","length","InputField","label","type","additionalElements","warning","text","ReactDOM","render","style","color","document","getElementById","Login","emailOrUsername","password","newPassword","confirmPassword","createAccount","email","value","includes","border","console","log","inputElements","getElementsByClassName","addEventListener","keyCode","preventDefault","click","onSubmit","window","location","pathname","App","path","exact","component","Boolean","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a5ad4151.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default class Category extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"category\">\r\n                {this.props.category ?\r\n                    <div>\r\n                        <i\r\n                            className=\"material-icons\"\r\n                            id={this.props.id}\r\n                            onClick={e => this.props.show(e.target.id)}\r\n                        >keyboard_arrow_down</i>\r\n                        <p>{this.props.title}</p>\r\n                        <ul>\r\n                            {this.props.subcategories}\r\n                        </ul>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <i \r\n                            className=\"material-icons\"\r\n                            id={this.props.id}\r\n                            onClick={e => this.props.show(e.target.id)}\r\n                        >keyboard_arrow_right</i>\r\n                        <p>{this.props.title}</p>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Category from '../Category/Category'\r\nimport './Sidebar.scss'\r\n\r\nexport default class Sidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showElectronics: false,\r\n            showFoods: false,\r\n            showHI: false\r\n        }\r\n        this.showSubcategory = this.showSubcategory.bind(this)\r\n    }\r\n    showSubcategory(id) {\r\n        this.setState(prevState => {\r\n            for (var property in prevState) {\r\n                if (String(property) === id) {\r\n                    return {[property]: !prevState[property]}\r\n                }\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.show ? \r\n                    <div id=\"sidebar\">\r\n                        <header>\r\n                            <h1>Shop by Category</h1>\r\n                            <i className=\"material-icons\" onClick={this.props.changeShow}>arrow_back</i>\r\n                        </header>\r\n                        <Category \r\n                            category={this.state.showElectronics}\r\n                            id=\"showElectronics\"\r\n                            title=\"Electronics\"\r\n                            show={this.showSubcategory}\r\n                            subcategories={\r\n                                <div>\r\n                                    <li>PCs</li>\r\n                                    <li>Laptops</li>\r\n                                    <li>TVs</li>\r\n                                    <li>Phones</li>\r\n                                    <li>Tablets</li>\r\n                                    <li>Accessories</li>\r\n                                </div>\r\n                            }\r\n                        />\r\n                        <Category\r\n                            category={this.state.showFoods}\r\n                            id=\"showFoods\"\r\n                            title=\"Food and Drink\"\r\n                            show={this.showSubcategory}\r\n                            subcategories={\r\n                                <div>\r\n                                    <li>Meat</li>\r\n                                    <li>Vegetables</li>\r\n                                    <li>Wheats and Grains</li>\r\n                                    <li>Fruits</li>\r\n                                    <li>Snacks</li>\r\n                                    <li>Water</li>\r\n                                    <li>Sodas, Wines, and Other Beverages</li>\r\n                                    <li>Other</li>\r\n                                </div>\r\n                            }\r\n                        />\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Sidebar from '../Sidebar/Sidebar'\r\nimport './Navbar.scss'\r\n\r\nexport default class Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showSidebar: false\r\n        }\r\n        this.showSidebar = this.showSidebar.bind(this)\r\n    }\r\n    showSidebar() {\r\n        this.setState( prevState => {\r\n            return {showSidebar: !prevState.showSidebar}\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <i className=\"material-icons menu\" onClick={this.showSidebar}>menu</i>\r\n                <Sidebar show={this.state.showSidebar} changeShow={this.showSidebar}/>\r\n                <Link to=\"/\" className=\"home\">The Marketplace</Link>\r\n                <Link to=\"/login\" className=\"login\"><i className=\"material-icons\">person</i></Link>\r\n            </nav>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './Home.scss'\r\n\r\nfunction renderSlide(slideNo, elements) {\r\n    return (\r\n        <div className=\"slide\" id={slideNo}>\r\n            {elements}\r\n        </div>   \r\n    ) \r\n}\r\nvar slides = \r\n[\r\n    renderSlide(1, <h1>This is slide 1</h1>), \r\n    renderSlide(2, <h1>This is slide 2</h1>), \r\n    renderSlide(3, <h1>This is slide 3</h1>)\r\n]\r\nexport default class Home extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            slide: slides[0]\r\n        }\r\n        this.changeSlide = this.changeSlide.bind(this)\r\n    }\r\n    changeSlide(e) {\r\n        if (e.target.id === \"left\") {\r\n            this.setState(prevState => {\r\n                var prevStateID = prevState.slide.props.id\r\n                if (prevStateID === 1) {\r\n                    return {slide: slides[slides.length-1]}\r\n                }\r\n                else {\r\n                    return {slide: slides[prevStateID-1]}\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.setState(prevState => {\r\n                var prevStateID = prevState.slide.props.id\r\n                if (prevStateID === 3) {\r\n                    return {slide: slides[0]}\r\n                }\r\n                else {\r\n                    return {slide: slides[prevStateID]}\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"slideshow\">\r\n                    <div id=\"slideToShow\">\r\n                        {this.state.slide}\r\n                    </div>\r\n                    <i className=\"material-icons\" id=\"left\" onClick={this.changeSlide}>keyboard_arrow_left</i>\r\n                    <i className=\"material-icons\" id=\"right\" onClick={this.changeSlide}>keyboard_arrow_right</i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class InputField extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"inputField\">\r\n                <label>{this.props.label}</label>\r\n                <input type={this.props.type || \"text\"} className=\"inputInfo\" id={this.props.id} />\r\n                {this.props.additionalElements}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport './Login.scss'\r\nimport InputField from '../InputField/InputField'\r\n\r\nfunction warning(text) {\r\n    ReactDOM.render(<p style={{color: 'red'}}>{text}</p>, document.getElementById('warning'))\r\n}\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            emailOrUsername: '',\r\n            password: '',\r\n            newPassword: '',\r\n            confirmPassword: ''\r\n        }\r\n        this.createAccount = this.createAccount.bind(this)\r\n    }\r\n    createAccount(e) {\r\n        var newPassword = document.getElementById('newPassword')\r\n        var confirmPassword = document.getElementById('confirmPassword')\r\n        var email = document.getElementById('email')\r\n        if (newPassword.value === confirmPassword.value && newPassword.value !== '' && confirmPassword.value !== '' && email.value !== '') {\r\n            if (!(email.value.includes(\"@\"))) {\r\n                email.style.border = \"2.5px solid red\"\r\n                warning(\"Invalid email!\")\r\n                return;\r\n            }\r\n            else {\r\n                ReactDOM.render(null, document.getElementById('warning'))\r\n                console.log(\"Hello\")\r\n                // POST to db here\r\n            }\r\n        }\r\n        else if (email.value === '') {\r\n            email.style.border = \"2.5px solid red\"\r\n            warning(\"An email is required!\")\r\n        }\r\n        else if (newPassword.value === '') {\r\n            newPassword.style.border = \"2.5px solid red\"\r\n            warning(\"A password is required!\")\r\n        }\r\n        else if (confirmPassword.value === '' ) {\r\n            confirmPassword.style.border = \"2.5px solid red\"\r\n            warning(\"Please confirm your password!\")\r\n        }\r\n        else if (newPassword.value !== confirmPassword.value) {\r\n            newPassword.style.border = \"2.5px solid red\"\r\n            confirmPassword.style.border = \"2.5px solid red\"\r\n            warning(\"Passwords do not match!\")\r\n        }\r\n        else {\r\n            warning(\"Oops! Something went wrong.\")\r\n        }\r\n\r\n    }\r\n    render() {\r\n        var inputElements = document.getElementsByClassName('inputInfo')\r\n        for (var element of inputElements) {\r\n            element.addEventListener('keyup', e => {\r\n                if (e.keyCode === 13) {\r\n                    e.preventDefault()\r\n                    document.getElementById('createAccount').click()\r\n                }\r\n            })\r\n        }\r\n        return (    \r\n            <form onSubmit={e => e.preventDefault()}>\r\n                <div className=\"border\">\r\n                    {window.location.pathname === \"/login\" ?\r\n                        <div>\r\n                            <InputField label=\"Email or Username:\" id=\"emailOrUsername\" />\r\n                            <InputField type=\"password\" label=\"Password:\" id=\"password\" additionalElements={\r\n                                <span>\r\n                                    <Link to=\"/createAccount\">Create account</Link>\r\n                                    <Link to='/forgotPassword'>Forgot Password?</Link>\r\n                                </span>\r\n                            }/>\r\n                            <div className=\"submit\">\r\n                                <button type=\"submit\" id=\"login\">Log In</button>\r\n                            </div>\r\n                            <hr></hr>\r\n                            <div className=\"submit\">\r\n                                <button type=\"submit\" id=\"google-login\" onClick={e => e.preventDefault()}>Log In With Google<br></br>This button does nothing!</button>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <InputField label=\"Email:\" id=\"email\" />\r\n                            <InputField type=\"password\" label=\"New Password: \" id=\"newPassword\" />\r\n                            <InputField type=\"password\" label=\"Confirm Password:\" id=\"confirmPassword\" additionalElements={\r\n                                <span><Link to=\"/login\">Already have an account? Log in</Link></span>\r\n                            }/>\r\n                            <div id=\"warning\"></div>\r\n                            <div className=\"submit\">\r\n                                <button type=\"submit\" id=\"createAccount\" onClick={this.createAccount}>Create Account</button>\r\n                            </div>\r\n                            <hr></hr>\r\n                            <div className=\"submit\">\r\n                                <button type=\"submit\" id=\"create-google-login\" onClick={e => e.preventDefault()}>Create an account with Google<br></br>This button does nothing!</button>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Navbar from './Navbar/Navbar'\nimport Home from './Home/Home'\nimport Login from './Login/Login'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/login\" component={Login}/>\n        <Route path=\"/createAccount\" component={Login} />\n      </Router>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}